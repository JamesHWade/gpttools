[{"path":"https://jameshwade.github.io/gpttools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 gpttools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jameshwade.github.io/gpttools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Wade. Author, maintainer.","code":""},{"path":"https://jameshwade.github.io/gpttools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wade J (2022). gpttools: gpttools extends gptstudio devtools-like package using latest NLP models make package development easier. https://github.com/JamesHWade/gpttools, https://jameshwade.github.io/gpttools/.","code":"@Manual{,   title = {gpttools: gpttools extends gptstudio to be a devtools-like package using the latest NLP models to make package development easier},   author = {James Wade},   year = {2022},   note = {https://github.com/JamesHWade/gpttools, https://jameshwade.github.io/gpttools/}, }"},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"gpttools-","dir":"","previous_headings":"","what":"gpttools extends gptstudio to be a devtools-like package using the latest NLP models to make package development easier","title":"gpttools extends gptstudio to be a devtools-like package using the latest NLP models to make package development easier","text":"goal gpttools extend gptstudio R package developers easily incorporate use large language models (LLMs) project workflows. models appear step change use text knowledge work, carefully consider ethical implications using models. Ethics LLMs (also called Foundation Models) area active discussion. Read privacy note bottom, alpha software warranty anything.","code":""},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"gpttools extends gptstudio to be a devtools-like package using the latest NLP models to make package development easier","text":"Make OpenAI account. now, free one . Create OpenAI API key use openai package within Rstudio Set API key Rstudio one two ways: default, functions openai look OPENAI_API_KEY environment variable. want set global environment variable, can use following command, \"<APIKEY>\" replaced actual key: Alternatively, can set key .Renviron file. Otherwise, can add key .Renviron file project. following commands open .Renviron editing: can add following line file (, replace xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx actual key): now set API key every time start particular project. Note: using GitHub/Gitlab, forget add .Renviron .gitignore!","code":"Sys.setenv(OPENAI_API_KEY = \"<OPENAI_API_KEY>\") require(usethis) edit_r_environ(scope = \"project\") OPENAI_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"gpttools extends gptstudio to be a devtools-like package using the latest NLP models to make package development easier","text":"package four addinss: - Comment code: uses code-davinci-edit-001 model OpenAI add comments code prompt: “add comments line code, explaining code ” - Add roxygen: uses text-davinci-003 model OpenAI add fill roxygen skeleton highlight code (function) wiht prompt: “insert roxygen skeleton document function” - Convert script function: uses code-davinci-edit-001 model OpenAI convert highlighted script function prompt: “convert R code R function” - freeform addins let’s specify prompt using “edit” functionality chat-gpt can access addins addin toolbar use command pallet: CMD/CTRL+SHIFT+P.","code":""},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"privacy-notice","dir":"","previous_headings":"","what":"Privacy Notice","title":"gpttools extends gptstudio to be a devtools-like package using the latest NLP models to make package development easier","text":"Privacy note: functions work taking text code highlighted/selected cursor send OpenAI part prompt, fall privacy notice/rules/exceptions agreed OpenAI making account. know secure sent OpenAI, also don’t know OpenAI . code designed share highlighted/selected text elements R environment (.e. data) unless highlighted running addin. may limit usability now, want people accidentally share sensitive data OpenAI. HIGHLIGHT, THEREFORE UPLOAD, DATA/CODE/TEXT REMAIN PRIVATE","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/add_roxygen_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Roxygen documentation to a function — add_roxygen_addin","title":"Add Roxygen documentation to a function — add_roxygen_addin","text":"function uses OpenAI API generate roxygen skeleton current selection RStudio. roxygen skeleton inserted document.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/add_roxygen_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Roxygen documentation to a function — add_roxygen_addin","text":"","code":"add_roxygen_addin()"},{"path":"https://jameshwade.github.io/gpttools/reference/add_roxygen_addin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Roxygen documentation to a function — add_roxygen_addin","text":"NULL (nothing returned; generated roxygen skeleton inserted document).","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API setup — check_api","title":"Check API setup — check_api","text":"function checks whether API key provided OPENAI_API_KEY environment variable valid. function re-check API already validated current session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API setup — check_api","text":"","code":"check_api(api_key = Sys.getenv(\"OPENAI_API_KEY\"))"},{"path":"https://jameshwade.github.io/gpttools/reference/check_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API setup — check_api","text":"api_key API key. Defaults value OPENAI_API_KEY environment variable.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API setup — check_api","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborts.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check connection to OpenAI's API works — check_api_connection","title":"Check connection to OpenAI's API works — check_api_connection","text":"function checks whether API key provided OPENAI_API_KEY environment variable valid.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check connection to OpenAI's API works — check_api_connection","text":"","code":"check_api_connection(api_key = Sys.getenv(\"OPENAI_API_KEY\"))"},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check connection to OpenAI's API works — check_api_connection","text":"api_key API key. Defaults value OPENAI_API_KEY environment variable.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check connection to OpenAI's API works — check_api_connection","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborted.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API key — check_api_key","title":"Check API key — check_api_key","text":"function checks whether API key provided argument correct format.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API key — check_api_key","text":"","code":"check_api_key(api_key = Sys.getenv(\"OPENAI_API_KEY\"))"},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API key — check_api_key","text":"api_key API key. Defaults value OPENAI_API_KEY environment variable.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API key — check_api_key","text":"Nothing returned. API key correct format, success message printed. API key correct format, error message printed function aborts.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/comment_code_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"active voice Addin — comment_code_addin","title":"active voice Addin — comment_code_addin","text":"Call function Rstudio addin ask GPT add comments code","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/comment_code_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"active voice Addin — comment_code_addin","text":"","code":"comment_code_addin()"},{"path":"https://jameshwade.github.io/gpttools/reference/gptAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"Freeform GPT editor — gptAddin","title":"Freeform GPT editor — gptAddin","text":"Call function Rstudio addin open GPT shiny app.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gptAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freeform GPT editor — gptAddin","text":"","code":"gptAddin()"},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_create","title":"Use GPT to improve text — gpt_create","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_create","text":"","code":"gpt_create(   model,   temperature,   max_tokens,   top_p,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL,   append_text = TRUE )"},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_create","text":"model name GPT model use. temperature parameter controlling randomness GPT model's output. max_tokens Maximum number tokens return (related length response), defaults 500 top_p parameter controlling probability GPT model's output. openai_api_key API key OpenAI API. openai_organization optional organization ID OpenAI API. append_text Add text selection rather replace, defaults TRUE","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_create","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_edit","title":"Use GPT to improve text — gpt_edit","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_edit","text":"","code":"gpt_edit(   model,   instruction,   temperature,   top_p,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL,   append_text = FALSE )"},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_edit","text":"model name GPT model use. instruction Instruction given model improve text. temperature parameter controlling randomness GPT model's output. top_p parameter controlling probability GPT model's output. openai_api_key API key OpenAI API. openai_organization optional organization ID OpenAI API. append_text Add text selection rather replace, defaults FALSE","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_edit","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_insert","title":"Use GPT to improve text — gpt_insert","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_insert","text":"","code":"gpt_insert(   model,   prompt,   temperature,   max_tokens = 1000,   top_p,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_insert","text":"model name GPT model use. prompt Instructions insertion temperature parameter controlling randomness GPT model's output. max_tokens Maximum number tokens return (related length response), defaults 500 top_p parameter controlling probability GPT model's output. openai_api_key API key OpenAI API. openai_organization optional organization ID OpenAI API.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_insert","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/script_to_function_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Script to Function Addin — script_to_function_addin","title":"Convert Script to Function Addin — script_to_function_addin","text":"function converts script function","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/script_to_function_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Script to Function Addin — script_to_function_addin","text":"","code":"script_to_function_addin()"}]
