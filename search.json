[{"path":[]},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported repo owner, James Wade. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jameshwade.github.io/gpttools/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jameshwade.github.io/gpttools/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to gpttools","title":"Contributing to gpttools","text":"outlines propose change gpttools. based tidyverse team’s contributing guide.","code":""},{"path":"https://jameshwade.github.io/gpttools/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to gpttools","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jameshwade.github.io/gpttools/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to gpttools","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. Maybe work together! ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). aren’t sure create reprex (can tricky gpttools interactive tools), please just describe issue best can.","code":""},{"path":"https://jameshwade.github.io/gpttools/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to gpttools","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"JamesHWade/gpttools\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jameshwade.github.io/gpttools/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to gpttools","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jameshwade.github.io/gpttools/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to gpttools","text":"Please note gpttools project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jameshwade.github.io/gpttools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 gpttools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jameshwade.github.io/gpttools/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with gpttools","title":"Getting help with gpttools","text":"Thanks using gpttools! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jameshwade.github.io/gpttools/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with gpttools","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jameshwade.github.io/gpttools/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with gpttools","text":"Armed reprex, next step figure ask. ’s bug: ’re right place, file issue. ’s question: sure ’s gpttools another R question. Please file issue. package grows popularity, may try community.rstudio.com, /StackOverflow. people answer questions. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jameshwade.github.io/gpttools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Wade. Author, maintainer.","code":""},{"path":"https://jameshwade.github.io/gpttools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wade J (2023). gpttools: Extends gptstudio package development help document code, write tests, even explain code. R package version 0.2.2, https://github.com/JamesHWade/gpttools.","code":"@Manual{,   title = {gpttools: Extends gptstudio for package development to help you document code, write tests, or even explain code},   author = {James Wade},   year = {2023},   note = {R package version 0.2.2},   url = {https://github.com/JamesHWade/gpttools}, }"},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"gpttools-","dir":"","previous_headings":"","what":"Extends gptstudio for package development to help you document code, write tests, or even explain code","title":"Extends gptstudio for package development to help you document code, write tests, or even explain code","text":"goal gpttools extend gptstudio R package developers easily incorporate use large language models (LLMs) project workflows. models appear step change use text knowledge work, carefully consider ethical implications using models. Ethics LLMs (also called Foundation Models) area active discussion.","code":""},{"path":[]},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"install-from-github-with-remotes","dir":"","previous_headings":"Installation","what":"Install from GitHub with {remotes}","title":"Extends gptstudio for package development to help you document code, write tests, or even explain code","text":"","code":"require(remotes) remotes::install_github(\"JamesHWade/gpttools\")"},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"install-from-r-universe","dir":"","previous_headings":"Installation","what":"Install from R-Universe","title":"Extends gptstudio for package development to help you document code, write tests, or even explain code","text":"","code":"# Enable repository from jameshwade options(repos = c(   jameshwade = \"https://jameshwade.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" )) # Download and install gpttools in R install.packages(\"gpttools\") # Browse the gpttools manual pages help(package = \"gpttools\")"},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"privacy-notice","dir":"","previous_headings":"","what":"Privacy Notice","title":"Extends gptstudio for package development to help you document code, write tests, or even explain code","text":"functions work taking text code highlighted selected cursor, prompt use one built-apps, send OpenAI part prompt. Prompts fall privacy notice, rules, exceptions agreed making OpenAI account. tell guarantee secure prompts sent OpenAI. know OpenAI prompts, OpenAI clear use prompts results improve model unless opt explicitly contacting . code designed share highlighted selected text, prompt build help one apps elements R environment. Nonetheless, sure aware send OpenAI accidentally share sensitive data OpenAI. HIGHLIGHT THEREFORE UPLOAD DATA, CODE, TEXT REMAIN PRIVATE See OpenAI’s Terms Use https://openai.com/terms details.","code":""},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Extends gptstudio for package development to help you document code, write tests, or even explain code","text":"Make OpenAI account. now, free one . Create OpenAI API key Set API key RStudio one two ways: default, API calls look OPENAI_API_KEY environment variable. want set global environment variable, can use following command, \"<APIKEY>\" replaced actual key: Alternatively, can set key .Renviron file. Otherwise, can add key .Renviron file project. following commands open .Renviron editing: can add following line file (, replace <api_key> actual key): now set API key every time start particular project. Note: using GitHub/Gitlab, forget add .Renviron .gitignore!","code":"Sys.setenv(OPENAI_API_KEY = \"<OPENAI_API_KEY>\") require(usethis) edit_r_environ(scope = \"project\") OPENAI_API_KEY=<api_key>"},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Extends gptstudio for package development to help you document code, write tests, or even explain code","text":"package four addins: Comment code: uses code-davinci-edit-001 model OpenAI add comments code prompt: “add comments line code, explaining code ” Add roxygen: uses text-davinci-003 model OpenAI add fill roxygen skeleton highlight code (function) prompt: “insert roxygen skeleton document function” Convert script function: uses code-davinci-edit-001 model OpenAI convert highlighted script function prompt: “convert R code R function” Write unit test function testthat: uses text-davinci-003 model OpenAI suggest unit test selected function prompt: “Suggest unit text function using testthat package” freeform addins let’s specify prompt using “edit” functionality ChatGPT can access addins addin toolbar use command pallet: CMD/CTRL+SHIFT+P. Examples addins action .","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jameshwade.github.io/gpttools/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Extends gptstudio for package development to help you document code, write tests, or even explain code","text":"Please note gpttools project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/add_roxygen_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Roxygen documentation to a function — add_roxygen_addin","title":"Add Roxygen documentation to a function — add_roxygen_addin","text":"function uses OpenAI API generate roxygen skeleton current selection RStudio. roxygen skeleton inserted document using prompt: \"insert roxygen skeleton document function\"","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/add_roxygen_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Roxygen documentation to a function — add_roxygen_addin","text":"","code":"add_roxygen_addin()"},{"path":"https://jameshwade.github.io/gpttools/reference/add_roxygen_addin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Roxygen documentation to a function — add_roxygen_addin","text":"NULL (nothing returned; generated roxygen skeleton inserted document).","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API setup — check_api","title":"Check API setup — check_api","text":"function checks whether API key provided OPENAI_API_KEY environment variable valid. function re-check API already validated current session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API setup — check_api","text":"","code":"check_api()"},{"path":"https://jameshwade.github.io/gpttools/reference/check_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API setup — check_api","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborts.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check connection to OpenAI's API works — check_api_connection","title":"Check connection to OpenAI's API works — check_api_connection","text":"function checks whether API key provided OPENAI_API_KEY environment variable valid.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check connection to OpenAI's API works — check_api_connection","text":"","code":"check_api_connection(api_key)"},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check connection to OpenAI's API works — check_api_connection","text":"api_key API key.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check connection to OpenAI's API works — check_api_connection","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborted.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API key — check_api_key","title":"Check API key — check_api_key","text":"function checks whether API key provided argument correct format.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API key — check_api_key","text":"","code":"check_api_key(api_key)"},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API key — check_api_key","text":"api_key API key.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/check_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API key — check_api_key","text":"Nothing returned. API key correct format, success message printed. API key correct format, error message printed function aborts.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/collect_dataframes.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Dataframes — collect_dataframes","title":"Collect Dataframes — collect_dataframes","text":"Collect dataframes global environment.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/collect_dataframes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Dataframes — collect_dataframes","text":"","code":"collect_dataframes()"},{"path":"https://jameshwade.github.io/gpttools/reference/collect_dataframes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Dataframes — collect_dataframes","text":"character vector dataframe names.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/comment_code_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"active voice Addin — comment_code_addin","title":"active voice Addin — comment_code_addin","text":"Call function RStudio addin ask GPT add comments code","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/comment_code_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"active voice Addin — comment_code_addin","text":"","code":"comment_code_addin()"},{"path":"https://jameshwade.github.io/gpttools/reference/document_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Document Data — document_data","title":"Document Data — document_data","text":"function runs Shiny application view document data.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/document_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document Data — document_data","text":"","code":"document_data()"},{"path":"https://jameshwade.github.io/gpttools/reference/get_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around selectionGet to help with testthat — get_selection","title":"Wrapper around selectionGet to help with testthat — get_selection","text":"Wrapper around selectionGet help testthat","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/get_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around selectionGet to help with testthat — get_selection","text":"","code":"get_selection()"},{"path":"https://jameshwade.github.io/gpttools/reference/get_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper around selectionGet to help with testthat — get_selection","text":"Text selection via rstudioapi::selectionGet","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Freeform GPT editor — gpt_addin","title":"Freeform GPT editor — gpt_addin","text":"Call function RStudio addin open GPT shiny app.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freeform GPT editor — gpt_addin","text":"","code":"gpt_addin()"},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_create","title":"Use GPT to improve text — gpt_create","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_create","text":"","code":"gpt_create(   model,   temperature,   max_tokens = getOption(\"gpttools.max_tokens\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   append_text = TRUE )"},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_create","text":"model name GPT model use. temperature parameter controlling randomness GPT model's output. max_tokens Maximum number tokens return (related length response), defaults 500 openai_api_key API key OpenAI API. append_text Add text selection rather replace, default TRUE","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_create","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_edit","title":"Use GPT to improve text — gpt_edit","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_edit","text":"","code":"gpt_edit(   model,   instruction,   temperature,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   append_text = FALSE )"},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_edit","text":"model name GPT model use. instruction Instruction given model improve text. temperature parameter controlling randomness GPT model's output. openai_api_key API key OpenAI API. append_text Add text selection rather replace, defaults FALSE","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_edit","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_insert","title":"Use GPT to improve text — gpt_insert","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_insert","text":"","code":"gpt_insert(   model,   prompt,   temperature = 0.1,   max_tokens = getOption(\"gpttools.max_tokens\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   append_text = FALSE )"},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_insert","text":"model name GPT model use. prompt Instructions insertion temperature parameter controlling randomness GPT model's output. max_tokens Maximum number tokens return (related length response), defaults 500 openai_api_key API key OpenAI API. append_text Add text selection rather replace, defaults FALSE","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpt_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_insert","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/gpttools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gpttools: Extends gptstudio for package development to help you document code, write tests, or even explain code — gpttools-package","title":"gpttools: Extends gptstudio for package development to help you document code, write tests, or even explain code — gpttools-package","text":"gpttools R package extends gptstudio provide devtools-like functionality using latest natural language processing (NLP) models. designed make package development easier providing range tools functions can used improve quality package's documentation, testing, maybe even functionality.","code":""},{"path":[]},{"path":"https://jameshwade.github.io/gpttools/reference/gpttools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gpttools: Extends gptstudio for package development to help you document code, write tests, or even explain code — gpttools-package","text":"Maintainer: James Wade github@jameshwade.com (ORCID)","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/insert_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around selectionGet to help with testthat — insert_text","title":"Wrapper around selectionGet to help with testthat — insert_text","text":"Wrapper around selectionGet help testthat","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/insert_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around selectionGet to help with testthat — insert_text","text":"","code":"insert_text(improved_text)"},{"path":"https://jameshwade.github.io/gpttools/reference/insert_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around selectionGet to help with testthat — insert_text","text":"improved_text Text model queries inert script document","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_completion.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text completions using OpenAI's API — openai_create_completion","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"Generate text completions using OpenAI's API","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_completion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"","code":"openai_create_completion(   model,   prompt = \"<|endoftext|>\",   suffix = NULL,   max_tokens = 16,   temperature = NULL,   top_p = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\") )"},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_completion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"model model use generating text prompt prompt generating completions suffix suffix generating completions. NULL, suffix used. max_tokens maximum number tokens generate. temperature temperature use generating text (0 1). NULL, default temperature used. recommended specify temperature top_p time. top_p top-p value use generating text (0 1). NULL, default top-p value used. recommended specify temperature top_p time. openai_api_key API key accessing OpenAI's API. default, function try use OPENAI_API_KEY environment variable.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_completion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"list generated completions information returned API.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_completion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"","code":"if (FALSE) { openai_create_completion(   model = \"text-davinci-002\",   prompt = \"Hello world!\" ) }"},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and edit text using OpenAI's API — openai_create_edit","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"Create edit text using OpenAI's API","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"","code":"openai_create_edit(   model,   input = \"\\\"\",   instruction,   temperature = NULL,   top_p = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\") )"},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"model model use generating text input input text edit instruction instruction editing text temperature temperature use generating text (0 1). NULL, default temperature used. recommended specify temperature top_p time. top_p top-p value use generating text (0 1). NULL, default top-p value used. recommended specify temperature top_p time. openai_api_key API key accessing OpenAI's API. default, function try use OPENAI_API_KEY environment variable.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"list edited text information returned API.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/openai_create_edit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"","code":"if (FALSE) { openai_create_edit(   model = \"text-davinci-002\",   input = \"Hello world!\",   instruction = \"Capitalize the first letter of each sentence.\" ) }"},{"path":"https://jameshwade.github.io/gpttools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://jameshwade.github.io/gpttools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/prep_data_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Preps OpenAI model prompt for data documentation — prep_data_prompt","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"Prepares data prompt summarizing data printing ","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/prep_data_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"","code":"prep_data_prompt(data, method, prompt)"},{"path":"https://jameshwade.github.io/gpttools/reference/prep_data_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"data data.frame method summarization method, one \"skimr\", \"glimpse\", \"summary\" prompt prompt string","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/prep_data_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"string","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/prep_data_prompt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"","code":"prep_data_prompt(   data = mtcars,   method = \"skimr\",   prompt = \"This is a test prompt.\" ) #> [1] \"── Data Summary ────────────────────────\\n                           Values\\nName                       data  \\nNumber of rows             32    \\nNumber of columns          11    \\n_______________________          \\nColumn type frequency:           \\n  numeric                  11    \\n________________________         \\nGroup variables            None  \\n\\n── Variable type: numeric ──────────────────────────────────────────────────────\\n   skim_variable n_missing complete_rate    mean      sd    p0    p25    p50\\n\\033[38;5;250m 1\\033[39m mpg                   0             1  20.1     6.03  10.4   15.4   19.2 \\n\\033[38;5;250m 2\\033[39m cyl                   0             1   6.19    1.79   4      4      6   \\n\\033[38;5;250m 3\\033[39m disp                  0             1 231.    124.    71.1  121.   196.  \\n\\033[38;5;250m 4\\033[39m hp                    0             1 147.     68.6   52     96.5  123   \\n\\033[38;5;250m 5\\033[39m drat                  0             1   3.60    0.535  2.76   3.08   3.70\\n\\033[38;5;250m 6\\033[39m wt                    0             1   3.22    0.978  1.51   2.58   3.32\\n\\033[38;5;250m 7\\033[39m qsec                  0             1  17.8     1.79  14.5   16.9   17.7 \\n\\033[38;5;250m 8\\033[39m vs                    0             1   0.438   0.504  0      0      0   \\n\\033[38;5;250m 9\\033[39m am                    0             1   0.406   0.499  0      0      0   \\n\\033[38;5;250m10\\033[39m gear                  0             1   3.69    0.738  3      3      4   \\n\\033[38;5;250m11\\033[39m carb                  0             1   2.81    1.62   1      2      2   \\n      p75   p100\\n\\033[38;5;250m 1\\033[39m  22.8   33.9 \\n\\033[38;5;250m 2\\033[39m   8      8   \\n\\033[38;5;250m 3\\033[39m 326    472   \\n\\033[38;5;250m 4\\033[39m 180    335   \\n\\033[38;5;250m 5\\033[39m   3.92   4.93\\n\\033[38;5;250m 6\\033[39m   3.61   5.42\\n\\033[38;5;250m 7\\033[39m  18.9   22.9 \\n\\033[38;5;250m 8\\033[39m   1      1   \\n\\033[38;5;250m 9\\033[39m   1      1   \\n\\033[38;5;250m10\\033[39m   4      5   \\n\\033[38;5;250m11\\033[39m   4      8   \\nThis is a test prompt.\""},{"path":"https://jameshwade.github.io/gpttools/reference/run_document_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app that supports Document Data addin — run_document_data","title":"Shiny app that supports Document Data addin — run_document_data","text":"Shiny app supports Document Data addin","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/run_document_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app that supports Document Data addin — run_document_data","text":"","code":"run_document_data()"},{"path":"https://jameshwade.github.io/gpttools/reference/run_document_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny app that supports Document Data addin — run_document_data","text":"Nothing returned, shiny app run","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/run_gpt_freeform.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app that supports GPT freeform addin — run_gpt_freeform","title":"Shiny app that supports GPT freeform addin — run_gpt_freeform","text":"Shiny app supports GPT freeform addin","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/run_gpt_freeform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app that supports GPT freeform addin — run_gpt_freeform","text":"","code":"run_gpt_freeform()"},{"path":"https://jameshwade.github.io/gpttools/reference/run_gpt_freeform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny app that supports GPT freeform addin — run_gpt_freeform","text":"Nothing returned, shiny app run","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/script_to_function_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Script to Function Addin — script_to_function_addin","title":"Convert Script to Function Addin — script_to_function_addin","text":"\"convert R code R function\"","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/script_to_function_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Script to Function Addin — script_to_function_addin","text":"","code":"script_to_function_addin()"},{"path":"https://jameshwade.github.io/gpttools/reference/suggest_code_improvements.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest code improvements — suggest_code_improvements","title":"Suggest code improvements — suggest_code_improvements","text":"Prompt: \"writing R code use package. can improve code:\"","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/suggest_code_improvements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest code improvements — suggest_code_improvements","text":"","code":"suggest_code_improvements()"},{"path":"https://jameshwade.github.io/gpttools/reference/suggest_unit_test_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest a unit test for a function — suggest_unit_test_addin","title":"Suggest a unit test for a function — suggest_unit_test_addin","text":"Prompt: \"Suggest unit test function using testthat package\"","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/suggest_unit_test_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest a unit test for a function — suggest_unit_test_addin","text":"","code":"suggest_unit_test_addin()"},{"path":"https://jameshwade.github.io/gpttools/reference/summarize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize data — summarize_data","title":"Summarize data — summarize_data","text":"Summarize data frame using one three methods.","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/summarize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize data — summarize_data","text":"","code":"summarize_data(   data,   method = c(\"skimr\", \"skimr_lite\", \"column_types\", \"summary\") )"},{"path":"https://jameshwade.github.io/gpttools/reference/summarize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize data — summarize_data","text":"data data frame method character vector specifying method use summarizing data. Must one \"skimr\", \"skimr_lite\", \"column_types\", \"summary\". Default \"skimr\".","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/summarize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize data — summarize_data","text":"Summarized data according specified method","code":""},{"path":"https://jameshwade.github.io/gpttools/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://jameshwade.github.io/gpttools/news/index.html","id":"gpttools-022","dir":"Changelog","previous_headings":"","what":"gpttools 0.2.2","title":"gpttools 0.2.2","text":"first CRAN release gpttools. package includes models : comment code generate roxygen suggest unit tests convert script function(s) document data Added NEWS.md file track changes package.","code":""}]
