[{"path":[]},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported repo owner, James Wade. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to gpttools","title":"Contributing to gpttools","text":"outlines propose change gpttools. based tidyverse team’s contributing guide.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to gpttools","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to gpttools","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. Maybe work together! ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). aren’t sure create reprex (can tricky gpttools interactive tools), please just describe issue best can.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to gpttools","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"JamesHWade/gpttools\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to gpttools","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to gpttools","text":"Please note gpttools project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 gpttools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with gpttools","title":"Getting help with gpttools","text":"Thanks using gpttools! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with gpttools","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with gpttools","text":"Armed reprex, next step figure ask. ’s bug: ’re right place, file issue. ’s question: sure ’s gpttools another R question. Please file issue. package grows popularity, may try community.rstudio.com, /StackOverflow. people answer questions. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/anthropic.html","id":"creating-an-anthropic-account","dir":"Articles","previous_headings":"","what":"Creating an Anthropic Account","title":"Anthropic API Service","text":"Go Anthropic website sign . Verify account instructed.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/anthropic.html","id":"creating-an-anthropic-api-key","dir":"Articles","previous_headings":"","what":"Creating an Anthropic API Key","title":"Anthropic API Service","text":"Log Anthropic account navigate API section. Create API key following guidelines. Check Anthropic’s API documentation details.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/anthropic.html","id":"setting-the-anthropic-api-key-in--renviron","dir":"Articles","previous_headings":"","what":"Setting the Anthropic API Key in .Renviron","title":"Anthropic API Service","text":"modify .Renviron file: persistent setting, add following line .Renviron, replacing \"<APIKEY>\" actual Anthropic API key: Save file restart R session changes take effect. Caution: Ensure .Renviron exposed using version control systems.","code":"require(usethis) edit_r_environ() ANTHROPIC_API_KEY=\"<APIKEY>\""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/azure.html","id":"azure-openai-service","dir":"Articles","previous_headings":"","what":"Azure OpenAI Service","title":"Azure OpenAI API Service","text":"configure gptstudio work using Azure OpenAI service, need provide configuration details .Renviron file. Specifically, gptstudio looks five environment variables: AZURE_OPENAI_TASK AZURE_OPENAI_ENDPOINT AZURE_OPENAI_DEPLOYMENT_NAME AZURE_OPENAI_KEY AZURE_OPENAI_API_VERSION ’s can add details .Renviron file: Locate .Renviron file usethis::edit_r_environ(). Add environment variable details: Add new line variable need set following format: VARIABLE_NAME=“YOUR_VALUE”. Replace VARIABLE_NAME name environment variable YOUR_VALUE actual value want set. example, set API key line like : need environment variables expected function. .Renviron file look something like : Save Close .Renviron: adding environment variables, save .Renviron file close . need restart R session make sure new environment variables loaded properly. Remember replace your_task_code, your_endpoint_url, your_deployment_name, your_api_key, your_api_version actual Azure OpenAI details. can retrieve details Azure OpenAI service account. information Azure OpenAI configuration, refer Microsoft quickstart guide.","code":"AZURE_OPENAI_KEY=\"your_actual_key_goes_here\" AZURE_OPENAI_TASK=\"your_task_code\" AZURE_OPENAI_ENDPOINT=\"your_endpoint_url\" AZURE_OPENAI_DEPLOYMENT_NAME=\"your_deployment_name\" AZURE_OPENAI_KEY=\"your_api_key\" AZURE_OPENAI_API_VERSION=\"your_api_version\""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/google.html","id":"creating-an-account-in-googles-ai-studio","dir":"Articles","previous_headings":"","what":"Creating an Account in Google’s AI Studio","title":"Google's AI Studio API Service","text":"Visit Google’s AI Studio website sign . Complete verification process.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/google.html","id":"accessing-google-palm-api","dir":"Articles","previous_headings":"","what":"Accessing Google PALM API","title":"Google's AI Studio API Service","text":"Google Cloud Console, enable PALM API. Create API key per instructions Google’s API documentation.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/google.html","id":"setting-the-google-ai-studio-api-key-in--renviron","dir":"Articles","previous_headings":"","what":"Setting the Google AI Studio API Key in .Renviron","title":"Google's AI Studio API Service","text":"modify .Renviron file: persistent setting, add following line .Renviron, replacing \"<APIKEY>\" actual Google PALM API key: Save file restart R session changes take effect. Caution: careful expose .Renviron public repositories version control systems protect API key.","code":"require(usethis) edit_r_environ() PALM_API_KEY=\"<APIKEY>\""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/huggingface.html","id":"creating-a-huggingface-account","dir":"Articles","previous_headings":"","what":"Creating a HuggingFace Account","title":"HuggingFace API Service","text":"Visit HuggingFace’s website sign account. Complete account verification process.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/huggingface.html","id":"creating-a-huggingface-api-key","dir":"Articles","previous_headings":"","what":"Creating a HuggingFace API Key","title":"HuggingFace API Service","text":"logging , go account settings. Find section API keys create new one. Detailed guidance available HuggingFace’s API documentation.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/huggingface.html","id":"setting-the-huggingface-api-key-in--renviron","dir":"Articles","previous_headings":"","what":"Setting the HuggingFace API Key in .Renviron","title":"HuggingFace API Service","text":"modify .Renviron file: persistent setting, add following line .Renviron, replacing \"<APIKEY>\" actual HuggingFace API key: Save file restart R session changes take effect. Caution: Remember include .Renviron .gitignore file prevent exposing API key, especially using version control systems like GitHub GitLab.","code":"require(usethis) edit_r_environ() HF_API_KEY=\"<APIKEY>\""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/no-build/chat-with-retrieval.html","id":"introduction","dir":"Articles > No-build","previous_headings":"","what":"Introduction","title":"Chat with Retrieval","text":"powerful feature gpttools Chat Retrieval app. app allows use AI service choosing augment chat retrieval-based responses. vignette walk process using app. vignette assumes already installed package set API key. app API key place, ready create index use app. typical patter use crawl() function create index. Let’s use example creating index extremely popular R Data Science book. ’ll use crawl() function scrape text book using rvest hood scrape text online book. text split chunks associated embedding vector. embedding vector used find similar chunks text. chunks text stored parquet file later use. embeddings, see fantastic resource Vicky Boykis: embeddings?. code scrape data relatively simple unlikely work sites. internal testing, works quite well pkgdown similar documentation sites.","code":"library(gpttools) crawl(\"https://r4ds.hadley.nz/\")"},{"path":"https://jameshwade.github.io/gpttools/dev/articles/no-build/chat-with-retrieval.html","id":"using-the-app","dir":"Articles > No-build","previous_headings":"","what":"Using the app","title":"Chat with Retrieval","text":"Chat Retrieval app Now created index, ready use app. app available via chat_with_retrieval() function RStudio addin Chat Retrieval. Simple Example Chat Retrieval","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/no-build/chat-with-retrieval.html","id":"custom-settings","dir":"Articles > No-build","previous_headings":"","what":"Custom Settings","title":"Chat with Retrieval","text":"can customize app using built-settings popover. Settings include: Data & Task Data Source: index indices use app. can select multiple indices use app. Default “” uses available indices. Task: default “Permissive Chat” tell ’s missing context still gives answer. option “Strict Chat” give answer context. Preferences AI Service: AI service use app. default OpenAI, can also use HuggingFace, Google AI Studio, Anthropic, . Note: must setup service separately account information API key. Model: model use AI service. default “gpt-4-1106-preview” powerful model available OpenAI. Save & User History: default FALSE. TRUE, app save chat history allow use context future chats. Local Embeddings: default TRUE download use model locally. FALSE, OpenAI’s API used generate embeddings. Docs Include (#): default 4 include top 4 similar documents. can increase decrease number needed. Chat History Include (#): default 4 include top 4 similar chat history items. can increase decrease number needed. Click Save Settings save settings across sessions. Customize Settings Chat Retrieval","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/no-build/ollama.html","id":"an-example-with-ollama","dir":"Articles > No-build","previous_headings":"","what":"An Example with Ollama","title":"Local Models with Ollama","text":"short video showing get started ollama. assumes already installed docker. See docker installation guide information.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/no-build/other-addins.html","id":"other-addins-for-interactive-use","dir":"Articles > No-build","previous_headings":"","what":"Other Addins for Interactive Use","title":"Other Addins","text":"package four addins use R, R Markdown, Quarto documents: Comment code: uses code-davinci-edit-001 model OpenAI add comments code prompt: “add comments line code, explaining code ” Add roxygen: uses text-davinci-003 model OpenAI add fill roxygen skeleton highlight code (function) prompt: “insert roxygen skeleton document function” Convert script function: uses code-davinci-edit-001 model OpenAI convert highlighted script function prompt: “convert R code R function” Write unit test function testthat: uses text-davinci-003 model OpenAI suggest unit test selected function prompt: “Suggest unit text function using testthat package” can access addins addin toolbar use command pallet: CMD/CTRL+SHIFT+P. Examples addins action .","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jameshwade.github.io/gpttools/dev/articles/no-build/scrape-pkgs.html","id":"select-packages","dir":"Articles > No-build","previous_headings":"","what":"Select Packages","title":"Scrape Package Sites","text":"Select Packages App “Select Packages” addin launches Shiny app allows select packages save selections. app launched executing “Select Packages” addin. addin available RStudio Addins menu. set default packages pre-selected. can add remove packages list. done, click “Save Selected Packages” button save selections. installed packages available selection.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/no-build/scrape-pkgs.html","id":"scrape-packages","dir":"Articles > No-build","previous_headings":"","what":"Scrape Packages","title":"Scrape Package Sites","text":"Run scrape packages addin executing “Scrape Packages” addin. addin available RStudio Addins menu. addin scrape installed packages create indices use “Chat Retrieval” app. addin prompt confirmation proceeding. scraping process run background. can continue working RStudio scraping process runs. can check progress Background Jobs pane. addin allows embeddings created using local models. want use embeddings using OpenAI embeddings, need run scrape_pkg_sites() function directly. See section Scraping Script details. reason two fold: 1. initial testing shows time create embeddings comparable local OpenAI embeddings, 2. OpenAI embeddings incur cost request. cost small, free.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/no-build/scrape-pkgs.html","id":"scraping-script","dir":"Articles > No-build","previous_headings":"Scrape Packages","what":"Scraping Script","title":"Scrape Package Sites","text":"script runs execute “Scrape Packages” addin. options(repos = c(CRAN = \"https://packagemanager.posit.co//latest\")) sets global options R environment. case, sets ‘repos’ option custom CRAN repository URL, “https://packagemanager.posit.co//latest”. telling R use specific CRAN-like repository provided Posit Package Manager installing packages. Posit Package manager offers consistent fast access package downloads. options(\"repos\") simply retrieving current setting ‘repos’ option. doesn’t change system state print ‘repos’ options console. scrape_pkg_sites() initiates scraping package information defined CRAN repository. scrape_pkg_sites() function scraping orchestrator checks packages scrape, prompts user confirmation, carries scraping operations delegating helper function. packages scrape determined get_pkgs_to_scrape() function. function checks packages installed yet scraped. packages scrape, function returns message user. packages scrape, function prompts user confirmation. user confirms, function calls scrape_pkg_site() function scrape package site. default packages scraped.","code":"library(gpttools) cli_inform(\"Scraping package sites and creating an index for each.\") options(repos = c(CRAN = \"https://packagemanager.posit.co/all/latest\")) options(\"repos\") scrape_pkg_sites() #>  [1] \"broom\"         \"conflicted\"    \"cli\"           \"dbplyr\"        #>  [5] \"dplyr\"         \"dtplyr\"        \"forcats\"       \"ggplot2\"       #>  [9] \"googledrive\"   \"googlesheets4\" \"haven\"         \"hms\"           #> [13] \"httr\"          \"jsonlite\"      \"lubridate\"     \"magrittr\"      #> [17] \"modelr\"        \"pillar\"        \"purrr\"         \"ragg\"          #> [21] \"readr\"         \"readxl\"        \"reprex\"        \"rlang\"         #> [25] \"rstudioapi\"    \"rvest\"         \"stringr\"       \"tibble\"        #> [29] \"tidyr\"         \"xml2\"          \"tidyverse\"     \"broom\"         #> [33] \"cli\"           \"conflicted\"    \"dials\"         \"dplyr\"         #> [37] \"ggplot2\"       \"hardhat\"       \"infer\"         \"modeldata\"     #> [41] \"parsnip\"       \"purrr\"         \"recipes\"       \"rlang\"         #> [45] \"rsample\"       \"rstudioapi\"    \"tibble\"        \"tidyr\"         #> [49] \"tune\"          \"workflows\"     \"workflowsets\"  \"yardstick\"     #> [53] \"tidymodels\"    \"shiny\"         \"bslib\"         \"shinyjs\"       #> [57] \"golem\"         \"httr2\"         \"vetiver\"       \"plumber\"       #> [61] \"embed\"         \"textrecipes\"   \"tidytext\"      \"devtools\"      #> [65] \"usethis\"       \"roxygen2\"      \"pkgdown\"       \"testthat\"      #> [69] \"knitr\"         \"rmarkdown\"     \"quarto\"        \"gptstudio\"     #> [73] \"rstanarm\"      \"brms\"          \"bayesplot\""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/openai.html","id":"creating-an-openai-account","dir":"Articles","previous_headings":"","what":"Creating an OpenAI Account","title":"OpenAI API Service","text":"Visit OpenAI’s website sign account. Follow instructions verify account.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/openai.html","id":"creating-an-openai-api-key","dir":"Articles","previous_headings":"","what":"Creating an OpenAI API Key","title":"OpenAI API Service","text":"logged , navigate API section account settings. Follow instructions create new API key. detailed steps can found OpenAI’s API documentation.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/openai.html","id":"setting-the-openai-api-key-in--renviron","dir":"Articles","previous_headings":"","what":"Setting the OpenAI API Key in .Renviron","title":"OpenAI API Service","text":"modify .Renviron file: persistent setting, add following line .Renviron, replacing \"<APIKEY>\" actual API key: Save file restart R session changes take effect. Caution: Ensure .Renviron included .gitignore file avoid exposing API key version control systems like GitHub GitLab. Important Note: OpenAI API requires valid payment details OpenAI account function. restriction imposed OpenAI unrelated package.","code":"require(usethis) edit_r_environ() OPENAI_API_KEY=\"<APIKEY>\""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/perplexity.html","id":"creating-an-perplexity-account","dir":"Articles","previous_headings":"","what":"Creating an Perplexity Account","title":"Perplexity","text":"Go Perplexity website sign . Verify account instructed.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/perplexity.html","id":"creating-an-perplexity-api-key","dir":"Articles","previous_headings":"","what":"Creating an Perplexity API Key","title":"Perplexity","text":"Log Perplexity account navigate API documentation. Create API key following guidelines. Check Perplexity’s API documentation details.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/perplexity.html","id":"setting-the-perplexity-api-key-in--renviron","dir":"Articles","previous_headings":"","what":"Setting the Perplexity API Key in .Renviron","title":"Perplexity","text":"modify .Renviron file: persistent setting, add following line .Renviron, replacing \"<APIKEY>\" actual Perplexity API key: Save file restart R session changes take effect. Caution: Ensure .Renviron exposed using version control systems.","code":"require(usethis) edit_r_environ() PERPLEXITY_API_KEY=\"<APIKEY>\""},{"path":"https://jameshwade.github.io/gpttools/dev/articles/retriever.html","id":"step-1-scraping-text-data","dir":"Articles","previous_headings":"","what":"Step 1: Scraping text data","title":"Create Your Own Data Retreival Database","text":"First, need scrape text data website want build vector database . Use crawl() function provided gpttools : crawl() function automatically generate embeddings create vector store ’ll call index. index enable efficient searching retrieval relevant information scraped data. default, save generated embeddings index location specified tools::R_user_dir(\"gpttools\", = \"data\").","code":"library(gpttools) crawl(\"https://r4ds.hadley.nz/\")"},{"path":"https://jameshwade.github.io/gpttools/dev/articles/retriever.html","id":"step-2-using-chatgpt-with-retriever","dir":"Articles","previous_headings":"","what":"Step 2: Using ChatGPT with Retriever","title":"Create Your Own Data Retreival Database","text":"gpttools also comes Shiny app allows use vector database plugin RStudio. launch app, open command palette (Cmd/Ctrl + Shift + P), type “gpttools”, select “gpttools: ChatGPT Retrieval” option. ChatGPT Retrieval creating data retriever gpttools, can harness power ChatGPT answer questions generate information specific domain interest, providing accurate relevant results tailored needs.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Wade. Author, maintainer.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wade J (2024). gpttools: Extensions Tools gptstudio. R package version 0.0.8.9009, https://github.com/JamesHWade/gpttools.","code":"@Manual{,   title = {gpttools: Extensions and Tools for gptstudio},   author = {James Wade},   year = {2024},   note = {R package version 0.0.8.9009},   url = {https://github.com/JamesHWade/gpttools}, }"},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"gpttools-","dir":"","previous_headings":"","what":"Extensions and Tools for gptstudio","title":"Extensions and Tools for gptstudio","text":"goal gpttools extend gptstudio R package developers easily incorporate use large language models (LLMs) project workflows. models appear step change use text knowledge work, carefully consider ethical implications using models. Ethics LLMs (also called Foundation Models) area active discussion.","code":""},{"path":[]},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"install-from-github-with-pak","dir":"","previous_headings":"Installation","what":"Install from GitHub with {pak}","title":"Extensions and Tools for gptstudio","text":"","code":"# install.packages(\"pak\") pak::pak(\"JamesHWade/gpttools\")"},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"install-from-r-universe","dir":"","previous_headings":"Installation","what":"Install from R-Universe","title":"Extensions and Tools for gptstudio","text":"","code":"# Enable repository from jameshwade options(repos = c(   jameshwade = \"https://jameshwade.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" )) # Download and install gpttools in R install.packages(\"gpttools\") # Browse the gpttools manual pages help(package = \"gpttools\")"},{"path":[]},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"default-ai-service-openai","dir":"","previous_headings":"Installation","what":"Default AI Service: OpenAI","title":"Extensions and Tools for gptstudio","text":"get started, must first set API service. package configured work several AI service providers, allowing flexibility choice based specific needs. default configuration set use OpenAI’s services. use need: Make OpenAI account. Sign . Create OpenAI API key use package. Set API key Rstudio. See section configuring API key.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"configuring-openai-api-key","dir":"","previous_headings":"Installation > Default AI Service: OpenAI","what":"Configuring OpenAI API Key","title":"Extensions and Tools for gptstudio","text":"interact OpenAI API, ’s required valid OPENAI_API_KEY environment variable. steps configure . can establish environment variable globally including project’s .Renviron file. approach ensures environment variable persists across sessions Shiny app runs background. set commands open .Renviron file modification: persistent setting loads every time launch project, add following line .Renviron, replacing \"<APIKEY>\" actual API key: Caution: ’re using version control systems like GitHub GitLab, remember include .Renviron .gitignore file prevent exposing API key! Important Note: OpenAI API function without valid payment details entered OpenAI account. restriction imposed OpenAI unrelated package.","code":"require(usethis) edit_r_environ() OPENAI_API_KEY=\"<APIKEY>\""},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"alternative-ai-service-providers","dir":"","previous_headings":"Installation","what":"Alternative AI Service Providers","title":"Extensions and Tools for gptstudio","text":"OpenAI default currently considered one robust options, gpttools also compatible AI service providers. include Anthropic, HuggingFace, Google AI Studio, Azure OpenAI, Perplexity. can select providers based preference specific requirements. can also run local models Ollama. requires setup benefit sharing data third party. use alternative provider, need obtain relevant API key access credentials chosen provider configure similarly.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"privacy-notice-for-gpttools","dir":"","previous_headings":"","what":"Privacy Notice for gpttools","title":"Extensions and Tools for gptstudio","text":"privacy notice applicable R package uses popular language models like gpt-4 turbo claude-2.1. using package, agree adhere privacy terms conditions set API service.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"data-sharing-with-ai-services","dir":"","previous_headings":"Privacy Notice for gpttools","what":"Data Sharing with AI Services","title":"Extensions and Tools for gptstudio","text":"using R package, text code highlight/select cursor, prompt enter within built-applications, sent selected AI service provider (e.g., OpenAI, Anthropic, HuggingFace, Google AI Studio, Azure OpenAI) part API request. data sharing governed privacy notice, rules, exceptions agreed respective service provider creating account.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"security-and-data-usage-by-ai-service-providers","dir":"","previous_headings":"Privacy Notice for gpttools","what":"Security and Data Usage by AI Service Providers","title":"Extensions and Tools for gptstudio","text":"guarantee security data send via API AI service provider, can provide details service processes uses data. However, providers often state use prompts results enhance AI models, outlined terms use. sure review terms use respective AI service provider directly.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"limiting-data-sharing","dir":"","previous_headings":"Privacy Notice for gpttools","what":"Limiting Data Sharing","title":"Extensions and Tools for gptstudio","text":"R package designed share text code specifically highlight/select include prompt built-applications. elements R environment shared unless turn features . responsibility ensure accidentally share sensitive data AI service provider. IMPORTANT: maintain privacy data, highlight, include prompt, otherwise upload sensitive data, code, text remain confidential.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Extensions and Tools for gptstudio","text":"Please note gpttools project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/add_roxygen_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Roxygen documentation to a function — add_roxygen_addin","title":"Add Roxygen documentation to a function — add_roxygen_addin","text":"function uses OpenAI API generate roxygen skeleton current selection RStudio. roxygen skeleton inserted document using prompt: \"insert roxygen skeleton document function\"","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/add_roxygen_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Roxygen documentation to a function — add_roxygen_addin","text":"","code":"add_roxygen_addin()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/add_roxygen_addin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Roxygen documentation to a function — add_roxygen_addin","text":"NULL (nothing returned; generated roxygen skeleton inserted document).","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/addin_run_scrape_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Addin to scrape installed packages — addin_run_scrape_pkgs","title":"Addin to scrape installed packages — addin_run_scrape_pkgs","text":"Invokes RStudio addin functionality scrape select installed packages create indices use \"Chat Retrieval\" application.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/addin_run_scrape_pkgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Addin to scrape installed packages — addin_run_scrape_pkgs","text":"","code":"addin_run_scrape_pkgs()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/addin_run_scrape_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Addin to scrape installed packages — addin_run_scrape_pkgs","text":"return value, called side effects .","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/addin_run_scrape_pkgs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Addin to scrape installed packages — addin_run_scrape_pkgs","text":"addin requires RStudio available stop error message RStudio API accessible.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/addin_run_scrape_pkgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Addin to scrape installed packages — addin_run_scrape_pkgs","text":"","code":"if (FALSE) { # rlang::is_interactive() # This function is typically run within RStudio as an Addin. # It would not be called directly in the code. addin_scrape_pkgs() }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/addin_run_select_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Package Selector App — addin_run_select_pkgs","title":"Run Package Selector App — addin_run_select_pkgs","text":"Run package selector shiny app","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/addin_run_select_pkgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Package Selector App — addin_run_select_pkgs","text":"","code":"addin_run_select_pkgs()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/addin_run_select_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Package Selector App — addin_run_select_pkgs","text":"function return value.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/chat_with_context.html","id":null,"dir":"Reference","previous_headings":"","what":"chat_with_context — chat_with_context","title":"chat_with_context — chat_with_context","text":"function allows chat chatbot answers questions based provided context chat history. uses GPT-4 architecture generate responses.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/chat_with_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"chat_with_context — chat_with_context","text":"","code":"chat_with_context(   query,   service = \"openai\",   model = \"gpt-4-turbo-preview\",   index = NULL,   add_context = TRUE,   chat_history = NULL,   history_name = \"chat_history\",   session_history = NULL,   add_history = TRUE,   task = \"Context Only\",   k_context = 4,   k_history = 4,   save_history = TRUE,   overwrite = FALSE,   local = FALSE,   embedding_model = NULL )"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/chat_with_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"chat_with_context — chat_with_context","text":"query input query processed. service Name AI service use, defaults openai. model Name openai model use, defaults gpt-3.5-turbo index Index look context. add_context Whether add context query . Default TRUE. chat_history Chat history dataframe reference. history_name Name file chat history stored. session_history Session history data reference. add_history Whether add chat history query . Default TRUE. task Task type, either \"Context \" \"Permissive Chat\". Default \"Context \". k_context Number top context matches consider. Default 4. k_history Number top chat history matches consider. Default 4. save_history Whether save chat history . Default TRUE. overwrite Whether overwrite history file . Default FALSE. local Whether use local model . Default FALSE. embedding_model model object use embedding. needed local TRUE. Default NULL.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/chat_with_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"chat_with_context — chat_with_context","text":"list containing prompt, context, answer.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/chat_with_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"chat_with_context — chat_with_context","text":"","code":"if (FALSE) { # rlang::is_interactive() rlang::is_interactive() query <- \"What is the capital of France?\" result <- chat_with_context(query = query, context = context) }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/chat_with_retrieval.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Chat with Retrieval — chat_with_retrieval","title":"Run Chat with Retrieval — chat_with_retrieval","text":"Run Chat Retrieval shiny app","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/chat_with_retrieval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Chat with Retrieval — chat_with_retrieval","text":"","code":"chat_with_retrieval()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/chat_with_retrieval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Chat with Retrieval — chat_with_retrieval","text":"function return value.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/chat_with_retrieval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Chat with Retrieval — chat_with_retrieval","text":"","code":"# Call the function as an RStudio addin if (FALSE) { chat_with_retrieval() }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/collect_dataframes.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Dataframes — collect_dataframes","title":"Collect Dataframes — collect_dataframes","text":"Collect dataframes global environment.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/collect_dataframes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Dataframes — collect_dataframes","text":"","code":"collect_dataframes()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/collect_dataframes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Dataframes — collect_dataframes","text":"character vector dataframe names.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/crawl.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape and process all hyperlinks within a given URL — crawl","title":"Scrape and process all hyperlinks within a given URL — crawl","text":"function scrapes hyperlinks within given URL processes data tibble format. saves resulting tibble parquet file.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/crawl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape and process all hyperlinks within a given URL — crawl","text":"","code":"crawl(   url,   index_create = TRUE,   aggressive = FALSE,   overwrite = FALSE,   update = FALSE,   pkg_version = \"not a package\",   pkg_name = NULL,   service = \"openai\" )"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/crawl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrape and process all hyperlinks within a given URL — crawl","text":"url character string URL scraped. index_create logical value indicating whether create index. Default TRUE. aggressive logical value indicating whether use aggressive link crawling. Default FALSE. overwrite logical value indicating whether overwrite scraped pages index already exist. Default FALSE. update logical value indicating whether update scraped pages, defaults FALSE. pkg_version Package version number pkg_name Package name service service use scraping. Default \"openai\". Options \"openai\" \"local\".","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/crawl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrape and process all hyperlinks within a given URL — crawl","text":"NULL. resulting tibble saved parquet file.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_index_from_audio.html","id":null,"dir":"Reference","previous_headings":"","what":"Create index from audio — create_index_from_audio","title":"Create index from audio — create_index_from_audio","text":"function creates index first transcribing audio file creating index.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_index_from_audio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create index from audio — create_index_from_audio","text":"","code":"create_index_from_audio(file_path, source, link = NULL, overwrite = FALSE)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_index_from_audio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create index from audio — create_index_from_audio","text":"file_path Character string specifying path audio file. source Character string specifying source audio. link Character string specifying link audio file (optional). overwrite Logical, whether overwrite existing index (default: FALSE).","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_index_from_audio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create index from audio — create_index_from_audio","text":"function writes index Parquet format disk.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_index_from_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create index from PDF — create_index_from_pdf","title":"Create index from PDF — create_index_from_pdf","text":"function creates index first ingesting PDF file creating index.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_index_from_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create index from PDF — create_index_from_pdf","text":"","code":"create_index_from_pdf(file_path, source, link = NULL, overwrite = FALSE)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_index_from_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create index from PDF — create_index_from_pdf","text":"file_path Character string specifying path PDF file. source Character string specifying source PDF. link Character string specifying link PDF file (optional). overwrite Logical, whether overwrite existing index (default: FALSE).","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_index_from_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create index from PDF — create_index_from_pdf","text":"function writes index Parquet format disk.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_transcript.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Transcription from Audio — create_transcript","title":"Get Transcription from Audio — create_transcript","text":"function transcribes audio files returns transcription text.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_transcript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Transcription from Audio — create_transcript","text":"","code":"create_transcript(file_path, prompt = NULL, chunk_size = 120)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_transcript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Transcription from Audio — create_transcript","text":"file_path Character string specifying path audio file. prompt Character string specifying prompt transcription (optional). chunk_size Audio size seconds.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/create_transcript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Transcription from Audio — create_transcript","text":"character string containing transcription text.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/delete_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete chat history files — delete_history","title":"Delete chat history files — delete_history","text":"function interactively deletes chat history files stored user's directory. lists .parquet files gpttools data directory prompts user confirmation deleting file.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/delete_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete chat history files — delete_history","text":"","code":"delete_history(local = FALSE)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/delete_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete chat history files — delete_history","text":"local Whether delete history made local OpenAI embeddings.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/delete_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete chat history files — delete_history","text":"","code":"if (FALSE) { # Interactively delete chat history files delete_history() }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/delete_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete an Index File — delete_index","title":"Delete an Index File — delete_index","text":"Interactively deletes specified index file user-defined directory. Presents user list available index files prompts confirmation deletion.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/delete_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete an Index File — delete_index","text":"","code":"delete_index()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/document_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Document Data — document_data","title":"Document Data — document_data","text":"function runs Shiny application view document data.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/document_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document Data — document_data","text":"","code":"document_data()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/extract_code_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Code Chunks from Text — extract_code_chunks","title":"Extract Code Chunks from Text — extract_code_chunks","text":"function extracts code chunks enclosed triple backticks given text input. supports identifying code blocks indicated triple backticks followed optional language identifier. function returns extracted code chunks.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/extract_code_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Code Chunks from Text — extract_code_chunks","text":"","code":"extract_code_chunks(text)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/extract_code_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Code Chunks from Text — extract_code_chunks","text":"text character vector containing text code chunks need extracted.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/extract_code_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Code Chunks from Text — extract_code_chunks","text":"list containing extracted code chunks.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/extract_code_chunks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Code Chunks from Text — extract_code_chunks","text":"","code":"sample_text <- \"Here is some text. ``` This is a code chunk. ```\" extract_code_chunks(sample_text) #> [1] \"This is a code chunk.\""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/get_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around selectionGet to help with testthat — get_selection","title":"Wrapper around selectionGet to help with testthat — get_selection","text":"Wrapper around selectionGet help testthat","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/get_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around selectionGet to help with testthat — get_selection","text":"","code":"get_selection()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/get_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper around selectionGet to help with testthat — get_selection","text":"Text selection via rstudioapi::selectionGet","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/get_transformer_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Transformer Model — get_transformer_model","title":"Get Transformer Model — get_transformer_model","text":"function designed download load pre-trained transformer model using transformers Python library via reticulate package. checks availability required Python package downloads specified transformer model.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/get_transformer_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Transformer Model — get_transformer_model","text":"","code":"get_transformer_model(   model_name = getOption(\"gpttools.local_embed_model\", \"BAAI/bge-small-en-v1.5\") )"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/get_transformer_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Transformer Model — get_transformer_model","text":"model_name name transformer model download. format \"username/modelname\" recognized transformers library. Default \"BAAI/bge-small-en-v1.5\".","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/get_transformer_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Transformer Model — get_transformer_model","text":"object downloaded transformer model.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/get_transformer_model.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get Transformer Model — get_transformer_model","text":"Users function need ensure Python environment set 'transformers' package installed. function uses 'reticulate' R package interface Python user may need configure accordingly.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/get_transformer_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Transformer Model — get_transformer_model","text":"","code":"if (FALSE) { # To get the default transformer model: get_transformer_model()  # To get a custom transformer model by specifying the model name: get_transformer_model(\"bert-base-uncased\") }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpt_sitrep.html","id":null,"dir":"Reference","previous_headings":"","what":"GPT Sitrep — gpt_sitrep","title":"GPT Sitrep — gpt_sitrep","text":"Check status OpenAI API RStudio API, inform user settings gpttools.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpt_sitrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPT Sitrep — gpt_sitrep","text":"","code":"gpt_sitrep()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpt_sitrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GPT Sitrep — gpt_sitrep","text":"message returned user informing status OpenAI API, RStudio API, gpttools settings.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpt_sitrep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GPT Sitrep — gpt_sitrep","text":"","code":"if (FALSE) { gpt_sitrep() }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpttools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gpttools: Extensions and Tools for gptstudio — gpttools-package","title":"gpttools: Extensions and Tools for gptstudio — gpttools-package","text":"gpttools R package provides extensions gptstudio provide devtools-like functionality using latest natural language processing (NLP) models. designed make package development easier providing range tools functions can used improve quality package's documentation, testing, maybe even functionality.","code":""},{"path":[]},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpttools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gpttools: Extensions and Tools for gptstudio — gpttools-package","text":"Maintainer: James Wade github@jameshwade.com (ORCID)","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpttools_index_all_scraped_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Index All Scraped Data — gpttools_index_all_scraped_data","title":"Index All Scraped Data — gpttools_index_all_scraped_data","text":"function iterates text files specified directory, updating creating indexes domain contained file names. Allows customization indexing process various parameters.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpttools_index_all_scraped_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index All Scraped Data — gpttools_index_all_scraped_data","text":"","code":"gpttools_index_all_scraped_data(   overwrite = FALSE,   local_embeddings = TRUE,   dont_ask = TRUE )"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpttools_index_all_scraped_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index All Scraped Data — gpttools_index_all_scraped_data","text":"overwrite logical value determining whether overwrite existing indexes. local_embeddings logical indicating whether use local embeddings indexing. dont_ask logical value , TRUE, disables interactive confirmation prompts indexing process.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpttools_index_all_scraped_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index All Scraped Data — gpttools_index_all_scraped_data","text":"Invisible NULL. function called side effects.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpttools_index_all_scraped_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Index All Scraped Data — gpttools_index_all_scraped_data","text":"function first retrieves list text files targeted directory. file, extracts domain name filename, prints informative message indexing process domain, proceeds create update index domain based function arguments.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/gpttools_index_all_scraped_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Index All Scraped Data — gpttools_index_all_scraped_data","text":"","code":"# Index all scraped data without overwriting existing indexes, using local # embeddings, and without interactive prompts.  if (FALSE) { gpttools_index_all_scraped_data(   overwrite = FALSE,   local_embeddings = TRUE,   dont_ask = TRUE ) }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/ingest_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingest PDF and write to index — ingest_pdf","title":"Ingest PDF and write to index — ingest_pdf","text":"function reads text PDF file, processes , writes result index.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/ingest_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingest PDF and write to index — ingest_pdf","text":"","code":"ingest_pdf(file_path, source, link = NULL)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/ingest_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingest PDF and write to index — ingest_pdf","text":"file_path Character string specifying path PDF file. source Character string specifying source PDF. link Character string specifying link PDF file (optional).","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/ingest_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ingest PDF and write to index — ingest_pdf","text":"function writes index Parquet format disk.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/insert_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around selectionGet to help with testthat — insert_text","title":"Wrapper around selectionGet to help with testthat — insert_text","text":"Wrapper around selectionGet help testthat","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/insert_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around selectionGet to help with testthat — insert_text","text":"","code":"insert_text(improved_text)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/insert_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around selectionGet to help with testthat — insert_text","text":"improved_text Text model queries inert script document","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/install_sentence_transformers.html","id":null,"dir":"Reference","previous_headings":"","what":"Install sentence-transformers and its dependencies — install_sentence_transformers","title":"Install sentence-transformers and its dependencies — install_sentence_transformers","text":"install_sentence_transformers() installs sentence-transformers python package direct dependencies. code taken slightly modified tensorflow reticulate packages. See original code tensorflow::install_tensorflow().","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/install_sentence_transformers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install sentence-transformers and its dependencies — install_sentence_transformers","text":"","code":"install_sentence_transformers(   method = c(\"auto\", \"virtualenv\", \"conda\"),   conda = \"auto\",   version = NULL,   envname = NULL,   extra_packages = NULL,   restart_session = TRUE,   conda_python_version = NULL,   ...,   pip_ignore_installed = TRUE,   python_version = conda_python_version )"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/install_sentence_transformers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install sentence-transformers and its dependencies — install_sentence_transformers","text":"method Installation method. default, \"auto\" automatically finds method work local environment. Change default force specific installation method. Note \"virtualenv\" method available Windows. conda path conda executable. Use \"auto\" allow reticulate automatically find appropriate conda binary. See Finding Conda conda_binary() details. version version install. Valid values include: \"release\" installs latest release version sentence-transformers (may incompatible current version R package) version specification like \"2.4\" \"2.4.0\". Note patch version supplied, latest patch release installed (e.g., \"2.4\" today installs version \"2.4.2\") nightly latest available nightly build. full URL path installer binary python *.whl file. envname name, full path, environment Python packages installed. NULL (default), active environment set RETICULATE_PYTHON_ENV variable used; unset, r-reticulate environment used. extra_packages Additional Python packages install along TensorFlow. restart_session Restart R session installing (note occur within RStudio). ... arguments passed reticulate::conda_install() reticulate::virtualenv_install(), depending method used. pip_ignore_installed Whether pip ignore installed python packages reinstall already installed python packages. defaults TRUE, ensure TensorFlow dependencies like NumPy compatible prebuilt TensorFlow binaries. python_version, conda_python_version Pass string like \"3.8\" request conda install specific Python version. ignored attempting install Python virtual environment.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/install_sentence_transformers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install sentence-transformers and its dependencies — install_sentence_transformers","text":"may prompted download install miniconda reticulate find non-system installation python. Miniconda recommended installation method users, ensures R python installation isolated python installations. python packages default installed self-contained conda venv environment named \"r-reticulate\". Note \"conda\" supported method M1 Mac. initially declined miniconda installation prompt, can later manually install miniconda running reticulate::install_miniconda().","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/install_sentence_transformers.html","id":"custom-installation","dir":"Reference","previous_headings":"","what":"Custom Installation","title":"Install sentence-transformers and its dependencies — install_sentence_transformers","text":"install_sentence_transformers() required use tensorflow package. manually configure python environment required dependencies, can tell R use pointing reticulate , commonly setting environment variable:","code":"Sys.setenv(\"RETICULATE_PYTHON\" = \"~/path/to/python-env/bin/python\")"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/install_sentence_transformers.html","id":"additional-packages","dir":"Reference","previous_headings":"","what":"Additional Packages","title":"Install sentence-transformers and its dependencies — install_sentence_transformers","text":"wish add additional PyPI packages Keras / TensorFlow environment can either specify packages extra_packages argument install_sentence_transformers(), alternatively install existing environment using reticulate::py_install() function.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/list_index.html","id":null,"dir":"Reference","previous_headings":"","what":"List Index Files — list_index","title":"List Index Files — list_index","text":"function lists index files specified directory.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/list_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Index Files — list_index","text":"","code":"list_index(dir = \"index\", full_path = FALSE)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/list_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Index Files — list_index","text":"dir Name directory, defaults \"index\" full_path TRUE, returns full path index files.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/list_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Index Files — list_index","text":"character vector containing names index files found specified directory.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/list_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Index Files — list_index","text":"","code":"if (FALSE) { list_index() }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/load_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Index Data for a Domain — load_index","title":"Load Index Data for a Domain — load_index","text":"function loads index data given domain parquet file.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/load_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Index Data for a Domain — load_index","text":"","code":"load_index(domain, local_embeddings = FALSE)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/load_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Index Data for a Domain — load_index","text":"domain character string indicating name domain. local_embeddings logical indicating whether load local embeddings OpenAI embeddings. Defaults FALSE.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/load_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Index Data for a Domain — load_index","text":"data frame containing index data specified domain.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/load_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Index Data for a Domain — load_index","text":"","code":"if (FALSE) { load_index(\"example_domain\") }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/prep_data_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Preps OpenAI model prompt for data documentation — prep_data_prompt","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"Prepares data prompt summarizing data printing ","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/prep_data_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"","code":"prep_data_prompt(data, method, prompt)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/prep_data_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"data data.frame method summarization method, one \"skimr\", \"glimpse\", \"summary\" prompt prompt string","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/prep_data_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"string","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/prep_data_prompt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"","code":"prep_data_prompt(   data = mtcars,   method = \"skimr\",   prompt = \"This is a test prompt.\" ) #> [1] \"── Data Summary ────────────────────────\\n                           Values\\nName                       data  \\nNumber of rows             32    \\nNumber of columns          11    \\n_______________________          \\nColumn type frequency:           \\n  numeric                  11    \\n________________________         \\nGroup variables            None  \\n\\n── Variable type: numeric ──────────────────────────────────────────────────────\\n   skim_variable n_missing complete_rate    mean      sd    p0    p25    p50\\n\\033[38;5;250m 1\\033[39m mpg                   0             1  20.1     6.03  10.4   15.4   19.2 \\n\\033[38;5;250m 2\\033[39m cyl                   0             1   6.19    1.79   4      4      6   \\n\\033[38;5;250m 3\\033[39m disp                  0             1 231.    124.    71.1  121.   196.  \\n\\033[38;5;250m 4\\033[39m hp                    0             1 147.     68.6   52     96.5  123   \\n\\033[38;5;250m 5\\033[39m drat                  0             1   3.60    0.535  2.76   3.08   3.70\\n\\033[38;5;250m 6\\033[39m wt                    0             1   3.22    0.978  1.51   2.58   3.32\\n\\033[38;5;250m 7\\033[39m qsec                  0             1  17.8     1.79  14.5   16.9   17.7 \\n\\033[38;5;250m 8\\033[39m vs                    0             1   0.438   0.504  0      0      0   \\n\\033[38;5;250m 9\\033[39m am                    0             1   0.406   0.499  0      0      0   \\n\\033[38;5;250m10\\033[39m gear                  0             1   3.69    0.738  3      3      4   \\n\\033[38;5;250m11\\033[39m carb                  0             1   2.81    1.62   1      2      2   \\n      p75   p100\\n\\033[38;5;250m 1\\033[39m  22.8   33.9 \\n\\033[38;5;250m 2\\033[39m   8      8   \\n\\033[38;5;250m 3\\033[39m 326    472   \\n\\033[38;5;250m 4\\033[39m 180    335   \\n\\033[38;5;250m 5\\033[39m   3.92   4.93\\n\\033[38;5;250m 6\\033[39m   3.61   5.42\\n\\033[38;5;250m 7\\033[39m  18.9   22.9 \\n\\033[38;5;250m 8\\033[39m   1      1   \\n\\033[38;5;250m 9\\033[39m   1      1   \\n\\033[38;5;250m10\\033[39m   4      5   \\n\\033[38;5;250m11\\033[39m   4      8   \\nThis is a test prompt.\""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/read_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Read chat history from a file — read_history","title":"Read chat history from a file — read_history","text":"Read chat history file","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/read_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read chat history from a file — read_history","text":"","code":"read_history(file_name = \"chat_history\", local)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/read_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read chat history from a file — read_history","text":"file_name Name chat history file read . Default \"chat_history\". local Whether read history made local OpenAI embeddings.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/read_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read chat history from a file — read_history","text":"dataframe containing chat history NULL file exist.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/read_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read chat history from a file — read_history","text":"","code":"if (FALSE) { # Read chat history from the default file history <- read_history() }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/remove_lines_and_spaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove new lines from a character vector. — remove_lines_and_spaces","title":"Remove new lines from a character vector. — remove_lines_and_spaces","text":"Removes new line characters character vector.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/remove_lines_and_spaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove new lines from a character vector. — remove_lines_and_spaces","text":"","code":"remove_lines_and_spaces(serie)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/remove_lines_and_spaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove new lines from a character vector. — remove_lines_and_spaces","text":"serie character vector.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/remove_lines_and_spaces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove new lines from a character vector. — remove_lines_and_spaces","text":"character vector new line characters removed.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/repair_index_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Repair Index Names — repair_index_names","title":"Repair Index Names — repair_index_names","text":"function scans index files specified directory, checks lack \"name\" column, attempts repair adding \"name\" column based file name user input.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/repair_index_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repair Index Names — repair_index_names","text":"","code":"repair_index_names(local = TRUE)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/repair_index_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repair Index Names — repair_index_names","text":"local logical; TRUE, function operates local index directory, otherwise uses main index directory.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/repair_index_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repair Index Names — repair_index_names","text":"function return value, modifies index files place either adding \"name\" column based automated generation user input.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/repair_index_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repair Index Names — repair_index_names","text":"","code":"if (FALSE) { repair_index_names(TRUE) repair_index_names(FALSE) }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_document_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app that supports Document Data addin — run_document_data","title":"Shiny app that supports Document Data addin — run_document_data","text":"Shiny app supports Document Data addin","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_document_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app that supports Document Data addin — run_document_data","text":"","code":"run_document_data()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_document_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny app that supports Document Data addin — run_document_data","text":"Nothing returned, shiny app run","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_extracted_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute and Present Extracted Code Chunks — run_extracted_code","title":"Execute and Present Extracted Code Chunks — run_extracted_code","text":"function takes extracted code chunks utilizes reprex packages run . formats output collapsible HTML section easy sharing viewing. Images within output converted clickable links enhance accessibility compactness presentation.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_extracted_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute and Present Extracted Code Chunks — run_extracted_code","text":"","code":"run_extracted_code(code)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_extracted_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute and Present Extracted Code Chunks — run_extracted_code","text":"code character vector code executed presented. code run reprex::reprex(), capturing outcome presentation.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_extracted_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute and Present Extracted Code Chunks — run_extracted_code","text":"HTML-formatted string includes collapsible section code's output. HTML string can embedded web pages, markdown documents, viewed directly browsers. function designed work seamlessly interactive environments, hence might return output invisibly.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_extracted_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute and Present Extracted Code Chunks — run_extracted_code","text":"","code":"if (FALSE) { # rlang::is_interactive() code <- \"plot(1:10)\" html_output <- run_extracted_code(code) # The returned value is an HTML string with the plotted output presented within a # collapsible section and any images replaced by links. }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_select_pkgs_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a Shiny App to Select and Save Installed Packages — run_select_pkgs_app","title":"Run a Shiny App to Select and Save Installed Packages — run_select_pkgs_app","text":"function launches Shiny application allows users select list installed packages save selections.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_select_pkgs_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a Shiny App to Select and Save Installed Packages — run_select_pkgs_app","text":"","code":"run_select_pkgs_app()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_select_pkgs_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a Shiny App to Select and Save Installed Packages — run_select_pkgs_app","text":"None function used side effect launching Shiny app return anything.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_select_pkgs_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run a Shiny App to Select and Save Installed Packages — run_select_pkgs_app","text":"application provides sidebar package selection action button save selected packages. displays selected packages data table.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/run_select_pkgs_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a Shiny App to Select and Save Installed Packages — run_select_pkgs_app","text":"","code":"if (FALSE) { # rlang::is_interactive() run_select_pkgs_app() }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/save_user_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Save user configuration settings for gpttools — save_user_config","title":"Save user configuration settings for gpttools — save_user_config","text":"function saves user's configuration settings gpttools service YAML file.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/save_user_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save user configuration settings for gpttools — save_user_config","text":"","code":"save_user_config(   service = \"openai\",   model = \"gpt-4-turbo-preview\",   task = \"Permissive Chat\",   local_embed = FALSE,   openai_embed_model = \"text-embedding-3-small\",   local_embed_model = \"BAAI/bge-small-en-v1.5\",   k_context = 4,   k_history = 4,   save_history = TRUE,   sources = \"All\",   run_code = FALSE,   persist = TRUE )"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/save_user_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save user configuration settings for gpttools — save_user_config","text":"service name service use, default \"openai\". model model use, default \"gpt-4-1106-preview\". task task perform, default \"Permissive Chat\". local_embed Whether use local embedding model. Default FALSE. openai_embed_model OpenAI embeddings model use, default \"text-embedding-3-small\". local_embed_model local embeddings model use, default \"BAAI/bge-small-en-v1.5\". k_context amount context keep, default 4. k_history amount history keep, default 4. save_history Logical indicating whether history saved, default TRUE. sources sources use, default \"\". run_code Whether execute generated code reprex::reprex(), default FALSE. persist Logical indicating whether persist settings, default TRUE.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/save_user_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save user configuration settings for gpttools — save_user_config","text":"Invisible NULL.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_pkg_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape packaging sites — scrape_pkg_sites","title":"Scrape packaging sites — scrape_pkg_sites","text":"Scrape packaging sites","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_pkg_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape packaging sites — scrape_pkg_sites","text":"","code":"scrape_pkg_sites(   sites = get_pkgs_to_scrape(local = TRUE),   service = \"local\",   index_create = TRUE,   overwrite = TRUE,   parallel = FALSE )"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_pkg_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrape packaging sites — scrape_pkg_sites","text":"sites data frame containing package sites scraped. provided, defaults get_pkgs_to_scrape(local = TRUE). service service used scraping, defaults \"local\". index_create Logical indicating whether create index, defaults TRUE. overwrite Logical indicating whether overwrite existing content, defaults TRUE. parallel Logical indicating whether use parallel processing, defaults FALSE.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_pkg_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrape packaging sites — scrape_pkg_sites","text":"Invisible NULL. function called side effects.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_pkg_sites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scrape packaging sites — scrape_pkg_sites","text":"function scrapes websites packages specified sites dataframe. sites empty, alerts user packages scrape returns NULL invisibly. user confirms proceed, scrapes package site using supplied details.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_pkg_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrape packaging sites — scrape_pkg_sites","text":"","code":"if (FALSE) { # rlang::is_interactive() scrape_pkg_sites() }"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape text from a URL — scrape_url","title":"Scrape text from a URL — scrape_url","text":"function scrapes text URL returns character vector.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape text from a URL — scrape_url","text":"","code":"scrape_url(url)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrape text from a URL — scrape_url","text":"url character string containing valid URL.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/scrape_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrape text from a URL — scrape_url","text":"character vector containing text URL.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/script_to_function_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Script to Function Addin — script_to_function_addin","title":"Convert Script to Function Addin — script_to_function_addin","text":"\"convert R code R function\"","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/script_to_function_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Script to Function Addin — script_to_function_addin","text":"","code":"script_to_function_addin()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/set_user_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Set user configuration settings for gpttools from a file — set_user_config","title":"Set user configuration settings for gpttools from a file — set_user_config","text":"function sets user's configuration settings gpttools reading YAML file. path provided, look file default R user config directory.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/set_user_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set user configuration settings for gpttools from a file — set_user_config","text":"","code":"set_user_config(path = NULL)"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/set_user_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set user configuration settings for gpttools from a file — set_user_config","text":"path path config YAML file. NULL, default path used.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/set_user_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set user configuration settings for gpttools from a file — set_user_config","text":"Invisible NULL.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/suggest_code_improvements.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest code improvements using a code copilot — suggest_code_improvements","title":"Suggest code improvements using a code copilot — suggest_code_improvements","text":"function provides suggestions improving provided code using expert code copilot. output formatted inclusion R file.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/suggest_code_improvements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest code improvements using a code copilot — suggest_code_improvements","text":"","code":"suggest_code_improvements()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/suggest_code_improvements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest code improvements using a code copilot — suggest_code_improvements","text":"string containing suggestions code improvements, including descriptions changes necessary annotations code comments. output formatted inclusion R file.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/suggest_unit_test_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest a unit test for a function — suggest_unit_test_addin","title":"Suggest a unit test for a function — suggest_unit_test_addin","text":"Prompt: \"Suggest unit test function using testthat package\"","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/suggest_unit_test_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest a unit test for a function — suggest_unit_test_addin","text":"","code":"suggest_unit_test_addin()"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/summarize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize data — summarize_data","title":"Summarize data — summarize_data","text":"Summarize data frame using one three methods.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/summarize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize data — summarize_data","text":"","code":"summarize_data(   data,   method = c(\"skimr\", \"skimr_lite\", \"column_types\", \"summary\") )"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/summarize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize data — summarize_data","text":"data data frame method character vector specifying method use summarizing data. Must one \"skimr\", \"skimr_lite\", \"column_types\", \"summary\". Default \"skimr\".","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/summarize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize data — summarize_data","text":"Summarized data according specified method","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/transcribe_audio.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcribe audio and write to index — transcribe_audio","title":"Transcribe audio and write to index — transcribe_audio","text":"function transcribes audio files, processes text, writes result index.","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/transcribe_audio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcribe audio and write to index — transcribe_audio","text":"","code":"transcribe_audio(   file_path,   source = NA,   link = NA,   prompt = NA,   chunk_size = 120 )"},{"path":"https://jameshwade.github.io/gpttools/dev/reference/transcribe_audio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcribe audio and write to index — transcribe_audio","text":"file_path Character string specifying path audio file. source Character string specifying source audio. link Character string specifying HTML link audio file (optional). prompt Character string specifying prompt transcription (optional). chunk_size Audio size seconds","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/reference/transcribe_audio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transcribe audio and write to index — transcribe_audio","text":"function writes index Parquet format disk.","code":""},{"path":[]},{"path":[]},{"path":"https://jameshwade.github.io/gpttools/dev/news/index.html","id":"major-features-and-improvements-0-0-8","dir":"Changelog","previous_headings":"","what":"Major features and improvements","title":"gpttools 0.0.8","text":"Added support AI services: anthropic, huggingface, google ai studio, ollama (local models) (#0042b93, #f3c64c2). Implemented fully local option AI models (#231f2c8, #482157f). Users can now use local embeddings option within package (#0042b93). Improved site scraping workflow efficiency better data retrieval (#308c809). Enhanced package documentation index updating functions smoother maintenance (#2139bfb, #4aa2344, #0304daf). Provided package options easy switching different AI models (#2027dbb). Added save options chat retrieval app better user experience (#51cc6a3, #4202256). Optionally execute code chat retrieval app (#7546037).","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/news/index.html","id":"bug-fixes-and-other-changes-0-0-8","dir":"Changelog","previous_headings":"","what":"Bug fixes and other changes","title":"gpttools 0.0.8","text":"Reconciled local versus OpenAI API history tracking, ensuring consistency reliability app’s history feature (#f3c64c2, #6d328b2). Improved scraping packages, exploring potential improvements scraping efficiency (#46e233a). Added “indices” option app, providing users comprehensive view indices. Updated README pkgdown site reflect recent changes guide users new features (#15a971b). Improved AI services vignettes provide detailed --date documentation using various AI services (#0304daf). Added new vignette package scraping, making scraping process clearer developers. Added vignette chat retrieval, offering tutorial leverage new feature within package. Removed dedicated azure functions azure embedding option due new focus fully local options (#ea30c57, #4259474).","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/news/index.html","id":"developmental-changes-0-0-8","dir":"Changelog","previous_headings":"","what":"Developmental changes","title":"gpttools 0.0.8","text":"Major cleanup codebase remove old, unused files, tidy namespace global variables (#7b71ab9, #737a266, #5e83b2e). Updated pre-commit configurations help maintain clean consistent coding style (#39828fb, #466830e, #32e5f1e, #423e107, #4c1713f). Removed unnecessary dependencies miniUI streamline package (#f337b32).","code":""},{"path":"https://jameshwade.github.io/gpttools/dev/news/index.html","id":"early-versions-of-gpttools-007","dir":"Changelog","previous_headings":"","what":"early versions of gpttools 0.0.7","title":"early versions of gpttools 0.0.7","text":"comment code generate roxygen suggest unit tests convert script function(s) document data Added NEWS.md file track changes package.","code":""}]
